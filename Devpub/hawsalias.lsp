;;; Command aliases for selected HawsEDC commands.
;;; To change a command name to your liking,
;;; Just change the name after the "defun c:"
;;;
;;; eg. (defun c:PreferredAlias () (c:haws-LongName))
;;;
;;; Don't forget to copy this file to a safe place for safekeeping.
;;;
;;Profile Drafter
(defun c:pro () (c:haws-pro))
(defun c:eop () (c:haws-eop))
(defun c:cu () (c:haws-cu))
(defun c:ellabel () (c:haws-ellabel))
(defun c:elv () (c:haws-elv))
(defun c:eop () (c:haws-eop))
(defun c:grb () (c:haws-grb))
(defun c:grc () (c:haws-grc))
(defun c:grd () (c:haws-grd))
(defun c:lst () (c:haws-lst))
(defun c:newpro () (c:haws-newpro))
(defun c:pc () (c:haws-pc))
(defun c:pldr () (c:haws-pldr))
(defun c:pm () (c:haws-pm))
(defun c:pred () (c:haws-pred))
(defun c:pro () (c:haws-pro))
(defun c:procb () (c:haws-procb))
(defun c:proe () (c:haws-proe))
(defun c:profc () (c:haws-profc))
(defun c:promh () (c:haws-promh))
(defun c:propipe () (c:haws-propipe))
(defun c:prosup () (c:haws-prosup))
(defun c:stalabel () (c:haws-stalabel))
(defun c:sel () (c:haws-sel))
(defun c:ser () (c:haws-ser))
;;;---------------Civil Drafting Section---------------
(defun c:2l () (c:haws-2l))
(defun c:berm () (c:haws-berm))
(defun c:acres () (c:haws-acres))
(defun c:cv () (c:haws-contvol))
(defun c:contvol () (c:haws-contvol))
(defun c:curve () (c:haws-curve))
(defun c:cd () (c:haws-geodata))
(defun c:gd () (c:haws-geodata))
(defun c:dm () (c:haws-dm))
(defun c:dw () (c:haws-dw))
(defun c:elev0 () (c:haws-elev0))
(defun c:m40 () (c:haws-m40))
(defun c:m42 () (c:haws-m42))
(defun c:mc2033 () (c:haws-mc2033))
(defun c:pipe () (c:haws-pipe))
(defun c:tap () (c:haws-tap))
(defun c:tapinv () (c:haws-tapinv))
(defun c:ut () (c:haws-ut))
(defun c:wall () (c:haws-wall))
(defun c:ws () (c:haws-ws))
(defun c:zero () (c:haws-zero))
;;;---------------Construction Notes Section---------------
(defun c:bb () (c:haws-bb))
(defun c:boxl () (c:haws-boxl))
(defun c:cirl () (c:haws-cirl))
(defun c:dial () (c:haws-dial))
(defun c:elll () (c:haws-elll))
(defun c:hexl () (c:haws-hexl))
(defun c:octl () (c:haws-octl))
(defun c:penl () (c:haws-penl))
(defun c:recl () (c:haws-recl))
(defun c:sstl () (c:haws-sstl))
(defun c:tril () (c:haws-tril))
(defun c:tcg () (c:haws-tcg))
(defun c:txtl () (c:haws-txtl))
(defun c:bw () (c:haws-bw))
(defun c:cnm () (c:hcnm-cnm))
(defun c:cnmop () (c:hcnm-cnmoptions))
(defun c:bubredef () (c:haws-bubredef))
(defun c:noteseditor () (c:hcnm-noteseditor))
(defun c:notesedit () (c:hcnm-notesedit))
(defun c:notesfilein () (c:haws-notesfilein))
(defun c:cnmmenu () (c:haws-cnmmenu))
(defun c:phaseedit () (c:haws-phaseedit))
(defun c:setnotephases () (c:haws-setnotephases))
(defun c:ntpurge () (c:haws-ntpurge))
(defun c:setnotesbubblestyle () (c:hcnm-setnotesbubblestyle))
(defun c:invl () (c:haws-invl))
(defun c:invr () (c:haws-invr))
(defun c:lotel () (c:haws-lotel))
(defun c:pad () (c:haws-pad))
(defun c:sll () (c:haws-sll))
(defun c:slope () (c:haws-slope))
(defun c:spotel () (c:haws-spotel))
(defun c:slr () (c:haws-slr))
(defun c:tcelev () (c:haws-tcelev))
(defun c:tcelevl () (c:haws-tcelevl))
(defun c:tcelevr () (c:haws-tcelevr))
(defun c:tcl () (c:haws-tcl))
(defun c:tcr () (c:haws-tcr))
(defun c:rev () (c:haws-rev))
(defun c:tc () (c:haws-tc))
;;last two from the profiles and civil groups
;;;---------------Horizontal Control Section---------------
(defun c:bdl () (c:haws-bdl))
(defun c:bdp () (c:haws-bdp))
(defun c:ne () (c:haws-ne))
(defun c:stacl () (c:haws-stacl))
(defun c:xy () (c:haws-xy))
;;;---------------Dimensioning Section---------------
(defun c:d1 () (c:haws-d1))
(defun c:d2 () (c:haws-d2))
(defun c:dp () (c:haws-dp))
(defun c:du () (c:haws-du))
(defun c:ht () (c:haws-ht))
(defun c:te () (c:haws-te))
(defun c:xx () (c:haws-xx))
(defun c:aar () (c:haws-aar))
(defun c:chdim () (c:haws-chdim))
(defun c:dimsty () (c:haws-dimsty))
(defun c:dot () (c:haws-dot))
(defun c:loop () (c:haws-loop))
(defun c:none () (c:haws-none))
(defun c:tilde () (c:haws-tilde))
(defun c:ldr () (c:haws-ldr))
(defun c:led () (c:haws-led))
;;;---------------Text Section---------------
(defun c:add () (c:haws-add))
(defun c:at () (c:haws-at))
(defun c:chnum () (c:haws-chnum))
(defun c:chgcase () (c:haws-chgcase))
(defun c:cht () (c:haws-cht))
(defun c:cmt () (c:haws-cmt))
(defun c:contxt () (c:haws-contxt))
(defun c:cs () (c:haws-cs))
(defun c:ee () (c:haws-ee))
(defun c:facnum () (c:haws-facnum))
(defun c:helv () (c:haws-helv))
(defun c:imp_exp () (c:haws-imp_exp))
(defun c:incnum () (c:haws-incnum))
(defun c:l80 () (c:haws-l80))
(defun c:l100 () (c:haws-l100))
(defun c:l120 () (c:haws-l120))
(defun c:l140 () (c:haws-l140))
(defun c:l175 () (c:haws-l175))
(defun c:l200 () (c:haws-l200))
(defun c:l240 () (c:haws-l240))
(defun c:l290 () (c:haws-l290))
(defun c:l350 () (c:haws-l350))
(defun c:l500 () (c:haws-l500))
(defun c:letter () (c:haws-letter))
(defun c:lotnum () (c:haws-lotnum))
(defun c:num () (c:haws-num))
(defun c:presuf () (c:haws-presuf))
(defun c:romans () (c:haws-romans))
(defun c:round () (c:haws-round))
(defun c:rrr () (c:haws-rrr))
(defun c:selstyle () (c:haws-selstyle))
(defun c:th () (c:haws-th))
(defun c:to () (c:haws-to))
(defun c:tu () (c:haws-tu))
(defun c:txtsum () (c:haws-txtsum))
;;;---------------Layer Management Section---------------
(defun c:l0 () (c:haws-l0))
(defun c:lk0 () (c:haws-lk0))
(defun c:lka () (c:haws-lka))
(defun c:ona () (c:haws-ona))
(defun c:tha () (c:haws-tha))
(defun c:ula () (c:haws-ula))
(defun c:ca () (c:haws-ca))
(defun c:chm () (c:haws-chm))
(defun c:cl () (c:haws-cl))
(defun c:ff () (c:haws-ff))
(defun c:ffx () (c:haws-ffx))
(defun c:off () (c:haws-off))
(defun c:offx () (c:haws-offx))
(defun c:uff () (c:haws-uff))
(defun c:uoff () (c:haws-uoff))
(defun c:uffx () (c:haws-uffx))
(defun c:uoffx () (c:haws-uoffx))
(defun c:ffi () (c:haws-ffi))
(defun c:lki () (c:haws-lki))
(defun c:ofi () (c:haws-ofi))
(defun c:lar () (c:haws-lar))
(defun c:las () (c:haws-las))
(defun c:lcp () (c:haws-lcp))
(defun c:lcpx () (c:haws-lcpx))
(defun c:ltp () (c:haws-ltp))
(defun c:ltpx () (c:haws-ltpx))
(defun c:lwp () (c:haws-lwp))
(defun c:lwpx () (c:haws-lwpx))
(defun c:lk () (c:haws-lk))
(defun c:laprn () (c:haws-laprn))
(defun c:ltb () (c:haws-ltb))
(defun c:ltc () (c:haws-ltc))
(defun c:lth () (c:haws-lth))
(defun c:lm () (c:haws-lm))
(defun c:lx () (c:haws-lx))
(defun c:lxx () (c:haws-lxx))
(defun c:lxxx () (c:haws-lxxx))
(defun c:oo () (c:haws-oo))
(defun c:offsetx () (c:haws-offsetx))
(defun c:as () (c:haws-as))
(defun c:ul () (c:haws-ul))
;;;---------------Block Management Section---------------
(defun c:a2t () (c:haws-a2t))
(defun c:att2txt () (c:haws-att2txt))
(defun c:attredef () (c:haws-attredef))
(defun c:at () (c:haws-at))
(defun c:bl0 () (c:haws-bl0))
(defun c:w () (c:haws-w))
(defun c:xda () (c:haws-xda))
(defun c:xra () (c:haws-xra))
(defun c:xrl () (c:haws-xrl))
(defun c:chattrib () (c:haws-chattrib))
(defun c:incatt () (c:haws-incatt))
(defun c:in () (c:haws-xin))
(defun c:out () (c:haws-xout))
(defun c:xd () (c:haws-xd))
(defun c:xro () (c:haws-xro))
(defun c:xroffet () (c:haws-xroffet))
(defun c:xu () (c:haws-xu))
;;;---------------Inquiry Section---------------
(defun c:eg () (c:haws-eg))
(defun c:egn () (c:haws-egn))
(defun c:aee () (c:haws-aee))
(defun c:aet () (c:haws-aet))
(defun c:al () (c:haws-al))
(defun c:goto () (c:haws-goto))
(defun c:istan () (c:haws-istan))
(defun c:md () (c:haws-md))
(defun c:wl () (c:haws-wl))
;;;---------------Editing Section---------------
(defun c:bf () (c:haws-bf))
(defun c:ec () (c:haws-ec))
(defun c:ew () (c:haws-ew))
(defun c:mc () (c:haws-mc))
(defun c:mp () (c:haws-mp))
(defun c:mw () (c:haws-mw))
(defun c:r1 () (c:haws-r1))
(defun c:r2 () (c:haws-r2))
(defun c:r4 () (c:haws-r4))
(defun c:r9 () (c:haws-r9))
(defun c:s () (c:haws-s))
(defun c:ub () (c:haws-ub))
(defun c:um () (c:haws-um))
(defun c:adl () (c:haws-adl))
(defun c:be () (c:haws-be))
(defun c:bt () (c:haws-bt))
(defun c:bm () (c:haws-bm))
(defun c:brk () (c:haws-brk))
(defun c:cr () (c:haws-cr))
(defun c:copyrot () (c:haws-copyrot))
(defun c:chcoord () (c:haws-chcoord))
(defun c:cw () (c:haws-cw))
(defun c:cmpro () (c:haws-cmpro))
(defun c:date () (c:haws-date))
(defun c:join () (alert "Join has been replaced by PJL and PJ")(c:haws-pjl))
(defun c:le () (c:haws-le))
(defun c:makepoly () (c:haws-makepoly))
(defun c:mf () (c:haws-mf))
(defun c:mof () (c:haws-mof))
(defun c:mscr () (c:haws-mscr))
(defun c:na () (c:haws-na))
(defun c:newscale () (c:haws-newscale))
(defun c:pj () (c:haws-pj))
(defun c:pjl () (c:haws-pjl))
(defun c:rescale () (c:haws-rescale))
(defun c:ssx () (c:haws-ssx))
(defun c:ssxpro () (c:haws-ssxpro))
(defun c:swap () (c:haws-swap))
;;;---------------Drawing Section---------------
(defun c:c2 () (c:haws-c2))
(defun c:ct () (c:haws-ct))
(defun c:p0 () (c:haws-p0))
(defun c:bx () (c:haws-bx))
;;;---------------Views and Zooms Section---------------
(defun c:2x () (c:haws-2x))
(defun c:5x () (c:haws-5x))
(defun c:9x () (c:haws-9x))
(defun c:x2 () (c:haws-x2))
(defun c:z0 () (c:haws-z0))
(defun c:za () (c:haws-za))
(defun c:ze () (c:haws-ze))
(defun c:zi () (c:haws-zi))
(defun c:zo () (c:haws-zo))
(defun c:zv () (c:haws-zv))
(defun c:zz () (c:haws-zz))
(defun c:zw () (c:haws-zw))
(defun c:tw () (c:haws-tw))
;;;---------------Setup and Drawing Environment Section---------------
(defun c:aa () (c:haws-aa))
(defun c:adt () (c:haws-adt))
(defun c:cet () (c:haws-cet))
(defun c:cmd () (c:haws-cmd))
(defun c:dia () (c:haws-dia))
(defun c:fdt () (c:haws-fdt))
(defun c:ib () (c:haws-ib))
(defun c:il () (c:haws-il))
(defun c:io () (c:haws-io))
(defun c:ir () (c:haws-ir))
(defun c:it () (c:haws-it))
(defun c:llt () (c:haws-llt))
(defun c:mn () (c:haws-mn))
(defun c:ose () (c:haws-ose))
(defun c:osi () (c:haws-osi))
(defun c:osm () (c:haws-osm))
(defun c:osn () (c:haws-osn))
(defun c:pslt () (c:haws-pslt))
(defun c:rga () (c:haws-rga))
(defun c:qt () (c:haws-qt))
(defun c:uf () (c:haws-uf))
(defun c:uf0 () (c:haws-uf0))
(defun c:uf1 () (c:haws-uf1))
(defun c:clean () (c:haws-clean))
(defun c:edcmenu () (c:haws-edcmenu))
(defun c:hawsedc () (c:haws-hawsedc))
(defun c:funky () (c:haws-funky))
(defun c:xin () (c:haws-xin))
(defun c:xout () (c:haws-xout))
(defun c:modestat () (c:haws-modestat))
(defun c:mren () (c:haws-mren))
(defun c:mv () (c:haws-mv))
(defun c:mvhp () (c:haws-mvhp))
(defun c:ns () (c:haws-ns))
(defun c:polarset () (c:haws-polarset))
(defun c:pall () (c:haws-pall))
(defun c:setup () (c:haws-setup))
(defun c:10 () (c:haws-10))
(defun c:12 () (c:haws-12))
(defun c:setdim10 () (c:haws-setdim10))
(defun c:setdim12 () (c:haws-setdim12))
(defun c:sheet () (c:haws-sheet))
(defun c:0 () (c:haws-0))
(defun c:1 () (c:haws-1))
(defun c:u0 () (c:haws-u0))
(defun c:u1 () (c:haws-u1))
(defun c:u2 () (c:haws-u2))
(defun c:u3 () (c:haws-u3))
(defun c:u8 () (c:haws-u8))
(defun c:us () (c:haws-us))
;;;---------------Miscellaneous Section---------------
(defun c:edchelp () (c:haws-edchelp))
(defun c:ffa () (c:haws-ffa))
(defun c:user () (c:haws-user))
(defun c:lr () (c:haws-loadandrun))
;;;---------------From old HawsEDC ACAD.PGP aliases
;;;Remove the semi-colons if you want these aliases.
;;(defun c:AP () (command "._APERTURE")(princ))
;;(defun c:B () (command "._BREAK")(princ))
;;(defun c:BL () (command "._-BLOCK")(princ))
;;(defun c:C () (command "._COPY")(princ))
;;(defun c:CC () (command "._CIRCLE")(princ))
;;(defun c:CF () (command "._CHAMFER")(princ))
;;(defun c:D () (command "._DIST")(princ))
;;(defun c:DA () (command "._DIMALIGNED")(princ))
;;(defun c:DANG () (command "._DIMANGULAR")(princ))
;;(defun c:DC () (command "._DIMCENTER")(princ))
;;(defun c:DH () (command "._DIMHORIZONTAL")(princ))
;;(defun c:DN () (command "._DWGNAME")(princ))
;;(defun c:DSC () (command "._DIMSCALE")(princ))
;;(defun c:DV () (command "._DIMVERTICAL")(princ))
;;(defun c:ELL () (command "._ELLIPSE")(princ))
;;(defun c:GS () (command "._GRIPSIZE")(princ))
;;(defun c:II () (command "._-INSERT")(princ))
;;(defun c:IB () (command "._INSBASE")(princ))
;;(defun c:LB () (command "._DDLMODES")(princ))
;;(defun c:LE () (command "._LENGTHEN")(princ))
;;(defun c:LD () (command "._LEADER")(princ))
;;(defun c:MM () (command "._MIRROR")(princ))
;;(defun c:PB () (command "._PICKBOX")(princ))
;;(defun c:PG () (command "._POLYGON")(princ))
;;(defun c:QS () (command "._QSAVE")(princ))
;;(defun c:QL () (command "._QLEADER")(princ))
;;(defun c:RD () (command "._REDO")(princ))
;;(defun c:RES () (command "._VIEWRES")(princ))
;;(defun c:RG () (command "._REGENALL")(princ))
;;(defun c:RR () (command "._ROTATE")(princ))
;;(defun c:T () (command "._TRIM")(princ))
;;(defun c:UU () (command "._DDUNITS")(princ))
;;(defun c:VR () (command "._VIEWRES")(princ))
;;(defun c:VS () (command "._VISRETAIN")(princ))
;;(defun c:WW () (command "._-WBLOCK")(princ))
;;(defun c:X () (command "._EXTEND")(princ))
;;;---------------Set a flag that aliases have been loaded
(setq *HAWS-HAWSALIASLOADED* T)